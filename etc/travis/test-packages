#!/usr/bin/env bash

join_string() {
    local IFS="$1"; shift; echo "$*";
}

test_package() {
    local code=0

    echo "Testing package at $1..."

    cd "$1"

    local messages=()

    if [ -e "phpspec.yml.dist" ] || [ -e "phpspec.yml" ]; then
        PHPSPEC=""
        if [ -x "bin/phpspec" ]; then
            PHPSPEC="bin/phpspec"
        elif [ -x "vendor/bin/phpspec" ]; then
            PHPSPEC="vendor/bin/phpspec"
        fi

        if [ -z "${PHPSPEC}" ]; then
            echo "Phpspec binary not found, make sure you included it in require-dev" 1>&2
            messages+=("(no phpspec binary)")
            code=1
        else
            echo "Specs found, running..."
            messages+=("(specs found)")
            "${PHPSPEC}" run --no-interaction -f dot || code=$?
        fi
    else
        echo "Specs not found, skipping..."
        messages+=("(specs not found)")
    fi

    if [ -e "phpunit.xml.dist" ] || [ -e "phpunit.xml" ]; then
        PHPUNIT=""
        if [ -x "bin/phpunit" ]; then
            PHPUNIT="bin/phpunit"
        elif [ -x "vendor/bin/phpunit" ]; then
            PHPUNIT="vendor/bin/phpunit"
        fi

        if [ -z "${PHPUNIT}" ]; then
            echo "Phpunit binary not found, make sure you included it in require-dev" 1>&2
            messages+=("(no phpunit binary)")
            code=1
        else
            echo "Phpunit tests found, running..."
            messages+=("(phpunit tests found)")
            "${PHPUNIT}" || code=$?
        fi
    else
        echo "Phpunit tests not found, skipping..."
        messages+=("(phpunit tests not found)")
    fi

    echo $(join_string " " "${messages[@]}") >&3

    return "${code}"
}

main() {
    set -e -o pipefail

    # shellcheck source=../concurrent.lib.sh
    source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../concurrent.lib.sh"

    local args=()
    for dir in $(etc/travis/find-packages); do
        args+=(- "Testing package at ${dir}..." test_package "${dir}")
    done

    CONCURRENT_LIMIT=5 CONCURRENT_COMPACT=0 CONCURRENT_LOG_DIR="${SYLIUS_BUILD_DIR}" concurrent "${args[@]}"
}

main
